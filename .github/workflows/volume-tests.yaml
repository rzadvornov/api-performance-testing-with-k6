name: K6 Volume Tests

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  volume-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Compile TypeScript tests
        run: npm run build

      - name: Set up Go for xk6
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Install xk6
        run: go install go.k6.io/xk6/cmd/xk6@latest

      - name: Build custom k6 with InfluxDB v2 support
        run: |
          xk6 build --with github.com/grafana/xk6-output-influxdb@latest
          sudo mv k6 /usr/local/bin/

      - name: Debug and run k6 tests
        env:
          INFLUXDB_URL: ${{ secrets.INFLUXDB_URL }}
          INFLUXDB_TOKEN: ${{ secrets.INFLUXDB_TOKEN }}
          INFLUXDB_ORG: ${{ secrets.INFLUXDB_ORG }}
          INFLUXDB_BUCKET: ${{ secrets.INFLUXDB_BUCKET }}
        run: |
          # Debug: show what we're working with
          echo "URL: ${INFLUXDB_URL:0:20}..."  # Show first 20 chars
          echo "Token: ${INFLUXDB_TOKEN:0:10}..."  # Show first 10 chars
          echo "Org: $INFLUXDB_ORG"
          echo "Bucket: $INFLUXDB_BUCKET"
          
          # Ensure URL has https:// prefix if missing
          if [[ ! "$INFLUXDB_URL" =~ ^https?:// ]]; then
            INFLUXDB_URL="https://$INFLUXDB_URL"
          fi
          
          # Try the most common parameter format
          k6 run \
            --out "xk6-influxdb=server=$INFLUXDB_URL,token=$INFLUXDB_TOKEN,org=$INFLUXDB_ORG,bucket=$INFLUXDB_BUCKET" \
            dist/volume-test.js

      - name: Generate report
        if: always()
        run: node reporter/generate-report.ts

      - name: Upload report as an artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: k6-report
          path: html-report/

  publish-report:
    runs-on: ubuntu-latest
    needs: volume-tests
    if: always()
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download report artifact
        uses: actions/download-artifact@v4
        with:
          name: k6-report
          path: ./report-artifact/

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload report to GitHub Pages
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./report-artifact/

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@4